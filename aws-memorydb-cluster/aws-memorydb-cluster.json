{
  "typeName": "AWS::MemoryDB::Cluster",
  "description": "The AWS::MemoryDB::Cluster resource creates an Amazon MemoryDB Cluster.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-memorydb",
  "definitions": {
    "Endpoint": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Address": {
          "description": "The DNS address of the primary read-write node.",
          "type": "string"
        },
        "Port": {
          "description": "The port number that the engine is listening on. ",
          "type": "integer"
        }
      }
    },
    "Node": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "description": "The name of the node in the cluster.",
          "type": "string"
        },
        "Status": {
          "description": "The status of the node in the cluster.",
          "type": "string"
        },
        "AvailabilityZone": {
          "description": "The availability zone in which the node was created.",
          "type": "string"
        },
        "CreateTime": {
          "description": "The create time of the node.",
          "type": "string"
        }
      }
    },
    "Shard": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "description": "The name of the shard.",
          "type": "string"
        },
        "Status": {
          "description": "The status of the shard.",
          "type": "string"
        },
        "Slots": {
          "description": "number of slots in the shard.",
          "type": "string"
        },
        "Nodes": {
          "description": "Nodes in the shard.",
          "type": "array",
          "uniqueItems": false,
          "items": {
            "$ref": "#/definitions/Node"
          }
        },
        "NumNodes": {
          "description": "number of nodes in the shard.",
          "type": "integer"
        }
      }
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        },
        "Value": {
          "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "minLength": 1,
          "maxLength": 128
        }
      },
      "required": [
        "Value",
        "Key"
      ]
    }
  },
  "properties": {
    "Name": {
      "description": "The cluster identifier. This parameter is stored as a lowercase string.",
      "type": "string"
    },
    "Description": {
      "description": "A user-created description for the Cluster.",
      "type": "string"
    },
    "Status": {
      "description": "The status of the Cluster",
      "type": "string"
    },
    "NodeType": {
      "description": "The compute and memory capacity of the nodes in the node group (shard).",
      "type": "string"
    },
    "NumShards": {
      "description": "A parameter that specifies the number of shards for this Redis cluster.",
      "type": "integer"
    },
    "NumReplicasPerShard": {
      "description": "An optional parameter that specifies the number of replica nodes in each node group (shard). Valid values are 0 to 5.",
      "type": "integer"
    },
    "SubnetGroupName": {
      "description": "The name of the subnet group to be used for the cluster.",
      "type": "string"
    },
    "SecurityGroupIds": {
      "description": "One or more Amazon VPC security groups associated with this cluster.",
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "items": {
        "type": "string"
      }
    },
    "MaintenanceWindow": {
      "description": "Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. ",
      "type": "string"
    },
    "ParameterGroupName": {
      "description": "The name of the parameter group associated with the cluster.",
      "type": "string"
    },
    "ParameterGroupStatus": {
      "description": "The status of the parameter group associated with the cluster.",
      "type": "string"
    },
    "Port": {
      "description": "The port number on which each member of the cluster accepts connections.",
      "type": "integer"
    },
    "SnapshotRetentionLimit": {
      "description": "For an automatic snapshot, the number of days for which MemoryDB retains the snapshot before deleting it.\n\nFor manual snapshots, this field reflects the SnapshotRetentionLimit for the source cluster when the snapshot was created. This field is otherwise ignored: Manual snapshots do not expire, and can only be deleted using the DeleteSnapshot operation.",
      "type": "integer"
    },
    "SnapshotWindow": {
      "description": "The daily time range during which MemoryDB takes daily snapshots of the source cluster.",
      "type": "string"
    },
    "ACLName": {
      "description": "name of the Access Control List.",
      "type": "string"
    },
    "SnsTopicArn": {
      "description": "The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.",
      "type": "string"
    },
    "SnsTopicStatus": {
      "description": "Status to enable or disable the Amazon Simple Notification Service (SNS) notifications for the cluster.",
      "type": "string"
    },
    "TLSEnabled": {
      "description": "A flag that enables in-transit encryption when set to true.\n\nYou cannot modify the value of TransitEncryptionEnabled after the cluster is created. To enable in-transit encryption on a cluster you must set TransitEncryptionEnabled to true when you create a cluster.",
      "type": "boolean"
    },
    "KmsKeyId": {
      "description": "AWS KMS keys (KMS key) for encryption at rest.",
      "type": "string"
    },
    "SnapshotArns": {
      "description": "One or more MemoryDB Snapshot ARNs to restore from.",
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "items": {
        "type": "string"
      }
    },
    "SnapshotName": {
      "description": "Name of a MemoryDB Snapshot to restore from.",
      "type": "string"
    },
    "FinalSnapshotName": {
      "description": "Name of the backup MemoryDB Snapshot.",
      "type": "string"
    },
    "ARN": {
      "description": "The Amazon Resource Name (ARN) of the cluster.",
      "type": "string"
    },
    "EngineVersion": {
      "description": "The engine version of the cluster.",
      "type": "string"
    },
    "ClusterEndpoint": {
      "description": "The cluster endpoint.",
      "$ref": "#/definitions/Endpoint"
    },
    "AvailabilityMode": {
      "description": "The availability mode of the cluster.",
      "type": "string"
    },
    "Shards": {
      "description": "The shards of the cluster.",
      "type": "array",
      "uniqueItems": false,
      "items": {
        "$ref": "#/definitions/Shard"
      }
    },
    "EnginePatchVersion": {
      "description": "The engine version of the cluster including the minor version.",
      "type": "string"
    },
    "AutoMinorVersionUpgrade": {
      "description": "A flag that enables automatic minor version upgrade when set to true.\n\nYou cannot modify the value of AutoMinorVersionUpgrade after the cluster is created. To enable AutoMinorVersionUpgrade on a cluster you must set AutoMinorVersionUpgrade to true when you create a cluster.",
      "type": "boolean"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this cluster.",
      "type": "array",
      "maxItems": 50,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  },
  "additionalProperties": false,
  "readOnlyProperties": [
    "/properties/Status",
    "/properties/Shards",
    "/properties/AvailabilityMode",
    "/properties/ClusterEndpoint",
    "/properties/ARN",
    "/properties/Port",
    "/properties/ParameterGroupStatus",
    "/properties/EnginePatchVersion"
  ],
  "required": [
    "Name",
    "NodeType"
  ],
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/TLSEnabled",
    "/properties/KmsKeyId",
    "/properties/SnapshotArns",
    "/properties/SnapshotName"
  ],
  "primaryIdentifier": [
    "/properties/Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "memorydb:CreateCluster",
        "memorydb:DescribeClusters",
        "memorydb:ListTags"
      ]
    },
    "read": {
      "permissions": [
        "memorydb:DescribeClusters",
        "memorydb:ListTags"
      ]
    },
    "update": {
      "permissions": [
        "memorydb:UpdateCluster",
        "memorydb:FailoverShard",
        "memorydb:DescribeClusters",
        "memorydb:ListTags",
        "memorydb:TagResource",
        "memorydb:UntagResource"
      ]
    },
    "delete": {
      "permissions": [
        "memorydb:DeleteCluster",
        "memorydb:DescribeClusters"
      ]
    },
    "list": {
      "permissions": [
        "memorydb:DescribeClusters"
      ]
    }
  }
}
